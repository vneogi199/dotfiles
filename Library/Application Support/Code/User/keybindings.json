// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+shift+f",
        "command": "editor.action.formatDocument.none",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
        "key": "shift+alt+f",
        "command": "-editor.action.formatDocument.none",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    // Open tabs with CMD    
    {
        "key": "cmd+1",
        "command": "workbench.action.openEditorAtIndex1"
    },
    {
        "key": "cmd+2",
        "command": "workbench.action.openEditorAtIndex2"
    },
    {
        "key": "cmd+3",
        "command": "workbench.action.openEditorAtIndex3"
    },
    {
        "key": "cmd+4",
        "command": "workbench.action.openEditorAtIndex4"
    },
    {
        "key": "cmd+5",
        "command": "workbench.action.openEditorAtIndex5"
    },
    {
        "key": "cmd+6",
        "command": "workbench.action.openEditorAtIndex6"
    },
    {
        "key": "cmd+7",
        "command": "workbench.action.openEditorAtIndex7"
    },
    {
        "key": "cmd+8",
        "command": "workbench.action.openEditorAtIndex8"
    },
    {
        "key": "cmd+9",
        "command": "workbench.action.openEditorAtIndex9"
    },
    // Toggle the leftmost bar with the huge icons
    {
        "key": "cmd+ctrl+b",
        "command": "workbench.action.toggleActivityBarVisibility"
    },
    // Navigate Splits
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown"
    },
    // Navigate buffers
    {
        "key": "ctrl+m",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.nextEditor"
    },
    // {
    //     "key": "ctrl+h",
    //     "command": "workbench.action.focusLeftGroup"
    // },
    // {
    //     "key": "ctrl+j",
    //     "command": "workbench.action.focusAboveGroup"
    // },
    // {
    //     "key": "ctrl+k",
    //     "command": "workbench.action.focusBelowGroup"
    // },
    // {
    //     "key": "ctrl+l",
    //     "command": "workbench.action.focusRightGroup"
    // },
    {
        "key": "ctrl+shift+h",
        "command": "workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "ctrl+shift+j",
        "command": "workbench.action.moveActiveEditorGroupDown"
    },
    {
        "key": "ctrl+shift+k",
        "command": "workbench.action.moveActiveEditorGroupUp"
    },
    {
        "key": "ctrl+shift+l",
        "command": "workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "ctrl+w s",
        "command": "workbench.action.splitEditorDown"
    },
    {
        "key": "ctrl+w v",
        "command": "workbench.action.splitEditorRight"
    },
    {
        "key": "tab",
        "command": "tab",
        "when": "editorTextFocus && !editorTabMovesFocus"
    },
    {
        "key": "shift+tab",
        "command": "outdent",
        "when": "editorTextFocus && !editorTabMovesFocus"
    },
    // Traverse VSCode IntelliSense suggestions with vim keybindings.
    {
        "key": "ctrl+n",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+p",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    // VSCode terminal commands.
    {
        "key": "cmd+n",
        "command": "workbench.action.terminal.newInActiveWorkspace"
    },
    {
        "key": "ctrl+\\",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "cmd+ctrl+enter",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "cmd+d",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+\\",
        "command": "-workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+k",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+cmd+down",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+j",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+cmd+up",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+w",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
    },
    {
        "key": "cmd+l",
        "command": "runCommands",
        "args": {
            "commands": [
                {
                    "command": "editor.action.insertSnippet",
                    "when": "editorTextFocus",
                    "args": {
                        "snippet": "console.log('${TM_SELECTED_TEXT}$1')$2;"
                    }
                },
                {
                    "command": "extension.vim_insert",
                    "when": "editorTextFocus",
                }
            ]
        }
    }
]